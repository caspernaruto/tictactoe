// Generated by CoffeeScript 1.9.1
(function() {
  var Game, Square, divs, game, i, index, j, len, square;

  Game = (function() {
    Game.prototype.isX = true;

    Game.prototype.moves = 0;

    Game.prototype.winner = null;

    Game.prototype.field = null;

    Game.prototype.playerX = 0;

    Game.prototype.playerO = 0;

    Game.prototype.winningNumbers = [7, 56, 448, 73, 146, 292, 273, 84];

    function Game() {
      var x;
      this.field = (function() {
        var j, results;
        results = [];
        for (x = j = 0; j <= 8; x = ++j) {
          results.push(Math.pow(2, x));
        }
        return results;
      })();
    }

    Game.prototype.currentMark = function() {
      if (this.isX) {
        return 'x';
      } else {
        return 'o';
      }
    };

    Game.prototype.currentPlayer = function() {
      if (this.isX) {
        return this.playerX;
      } else {
        return this.playerO;
      }
    };

    Game.prototype.checkWin = function() {
      var divs, i, j, k, l, len, len1, len2, number, ref;
      ref = this.winningNumbers;
      for (j = 0, len = ref.length; j < len; j++) {
        number = ref[j];
        if ((number & this.currentPlayer()) === number) {
          this.winner = "player " + (this.currentMark());
          console.log("winner is " + this.winner);
          divs = document.getElementsByClassName('square');
          for (k = 0, len1 = divs.length; k < len1; k++) {
            i = divs[k];
            i.innerHTML = '';
          }
          this.reset();
        }
      }
      if (this.moves > 8) {
        this.winner = 'nichya';
        console.log("" + this.winner);
        divs = document.getElementsByClassName('square');
        for (l = 0, len2 = divs.length; l < len2; l++) {
          i = divs[l];
          i.innerHTML = '';
        }
        return this.reset();
      }
    };

    Game.prototype.updateMark = function() {
      return this.isX = !this.isX;
    };

    Game.prototype.update = function(index) {
      if (this.isX) {
        this.playerX += this.field[index];
      } else {
        this.playerO += this.field[index];
      }
      this.moves++;
      this.checkWin();
      return this.updateMark();
    };

    Game.prototype.reset = function() {
      this.playerX = 0;
      this.playerO = 0;
      this.isX = false;
      this.moves = 0;
      return this.winner = null;
    };

    return Game;

  })();

  game = new Game;

  divs = document.getElementsByClassName('square');

  Square = (function() {
    function Square(el, index1) {
      this.el = el;
      this.index = index1;
    }

    Square.prototype.onclick = function() {
      var square;
      square = this;
      return this.el.onclick = function() {
        this.innerHTML = game.currentMark();
        return game.update(square.index);
      };
    };

    return Square;

  })();

  for (index = j = 0, len = divs.length; j < len; index = ++j) {
    i = divs[index];
    square = new Square(i, index);
    square.onclick();
  }

}).call(this);
